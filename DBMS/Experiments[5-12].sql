--EXPERIMENT 5
INSERT INTO TABLE_NAME VALUES (V1,V2);
DELETE FROM TABLE_NAME WHERE CONDITION;
DROP TABLE TABLE_NAME;
ALTER TABLE TABLE_NAME 
UPDATE TABLE_NAME SET ATTRIBUTE1 = V1 WHERE CONDITION

--EXPERIMENT 6
ALTER TABLE TABLE_NAME
ADD COLUMN_NAME DATATYPE

ALTER TABLE TABLE_NAME
DROP COLUMN COLUMN_NAME

ALTER TABLE TABLE_NAME
ADD CONSTRAINT_NAME (COLUMN_NAME)

ALTER TABLE TABLE_NAME
DROP CONSTRAINT_NAME (COLUMN_NAME)

DROP TABLE TABLE_NAME

DESC TABLE_NAME

DEFAULT <VALUE>

ALTER TABLE TABLE_NAME
ADD CHECK (CONDITION)

CREATE TABLE TABLE_NAME (
    COLUMN_NAME DATATYPE NOT NULL,
)

ALTER TABLE TABLE_NAME
ADD PRIMARY KEY (COLUMN_NAME)

ALTER TABLE TABLE_NAME
ADD FOREIGN KEY(COLUMN_NAME)
REFERENCES REFERENCE_TABLE_NAME (COLUMN_NAME)

CREATE TABLE TABLE_NAME (
    PRIMARY KEY(COLUMN_NAME)
    FOREIGN KEY(COLUMN_NAME) REFERENCES TABLE_NAME
);

--EXPERIMENT 7
--AND OPERATOR
SELECT COLUMN(S)
FROM TABLE_NAME
WHERE CONDITION AND CONDITION

--OR OPERATOR
SELECT COLUMN(S)
FROM TABLE_NAME
WHERE CONDITION OR CONDITION

--OPERATOR <=,>=,<,>
SELECT COLUMN(S)
FROM TABLE_NAME
WHERE CONDITION OPERATOR CONDITION

--AS KEYWORD
SELECT COLUMN(S)
FROM TABLE_NAME AS NEW_NEW(COLUMN_NAME(S))
WHERE CONDITION

--RENAME
SELECT OLD_TABLE_NAME AS NEW_TABLE_NAME
FROM TABLE_NAME

--DISTINCT
SELECT DISTINCT COLUMN_NAME
FROM TABLE_NAME

--STRING HANDLING
SELECT COLUMN_NAME
FROM TABLE_NAME
WHERE CONDITION LIKE %STRING%

SELECT COLUMN_NAME
FROM TABLE_NAME
WHERE COLUMN LIKE

-- OPERATOR *,-,/,+
SELECT COLUMN_NAME(OPERATOR)VALUE
FROM TABLE_NAME
WHERE CONDITION

UPDATE COLUMN
SET UPDATE_STATEMENT
WHERE CONDITION

DELETE FROM COLUMN
WHERE CONDITION

--EXPERIMENT 8